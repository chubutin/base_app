version: '3.9'
services:

  app_dev:
    container_name: app_dev
    environment:
      - APP_DB_USER=${APP_DB_USER}
      - APP_DB_PASS=${APP_DB_PASS}
      - APP_DB_NAME=${APP_DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - EMAIL_TEMPLATES_BASE_PATH=${EMAIL_TEMPLATES_BASE_PATH}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_USE_TLS=False
      - EMAIL_PORT=1025
    build:
      context: ./backend
    command:  uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 3000
    volumes:
      - ./backend:/golf_app
    depends_on:
      - db_dev
      - mail_dev
    ports:
      - 3000:3000
    networks:
      - app-network


  db_dev:
    container_name: db_dev
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - APP_DB_USER=${APP_DB_USER}
      - APP_DB_PASS=${APP_DB_PASS}
      - APP_DB_NAME=${APP_DB_NAME}
      - ENABLE_METRICS=${ENABLE_METRICS}
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-q', '-d', 'golf_db', '-U', 'postgres' ]
      timeout: 30s
      interval: 5s
      retries: 10
    image: postgres:12-alpine3.14
    ports:
      - '5455:5432'
    restart: always
    volumes:
      - db_data_dev:/var/lib/postgresql/data:cached
      - ./db/01_setup_database.sh:/docker-entrypoint-initdb.d/01_setup_database.sh:ro
    networks:
      - app-network

  mail_dev:
    image: mailhog/mailhog
    container_name: mail_dev
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - "1025:1025" # smtp server
      - "8025:8025" # web ui
    networks:
      - app-network


volumes:
  db_data_dev:
    driver: local


networks:
  app-network:
    driver: bridge